{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "afd44d02-cee4-41fb-bfb6-70d0919ad5d5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " During year 1, Total wealth is $15,300.\n",
      " During year 2, Total wealth is $31,671.\n",
      " During year 3, Total wealth is $49,173.\n",
      " During year 4, Total wealth is $67,868.\n",
      " During year 5, Total wealth is $90,307.\n",
      " During year 6, Total wealth is $114,248.\n",
      " During year 7, Total wealth is $139,775.\n",
      " During year 8, Total wealth is $166,975.\n",
      " During year 9, Total wealth is $195,939.\n",
      " During year 10, Total wealth is $229,918.\n",
      " During year 11, Total wealth is $266,080.\n",
      " During year 12, Total wealth is $304,542.\n",
      " During year 13, Total wealth is $345,431.\n",
      " During year 14, Total wealth is $388,878.\n",
      " During year 15, Total wealth is $439,025.\n",
      " During year 16, Total wealth is $492,294.\n",
      " During year 17, Total wealth is $548,853.\n",
      " During year 18, Total wealth is $608,878.\n",
      " During year 19, Total wealth is $672,557.\n",
      " During year 20, Total wealth is $745,168.\n",
      " During year 21, Total wealth is $822,190.\n",
      " During year 22, Total wealth is $903,859.\n",
      " During year 23, Total wealth is $990,422.\n",
      " During year 24, Total wealth is $1,082,140.\n",
      " During year 25, Total wealth is $1,185,745.\n",
      " During year 26, Total wealth is $1,295,520.\n",
      " During year 27, Total wealth is $1,411,793.\n",
      " During year 28, Total wealth is $1,534,910.\n",
      " It will take 28 years to retire.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "28"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "from dataclasses import dataclass\n",
    "\n",
    "\n",
    "@dataclass\n",
    "class ModelInputs:\n",
    "    starting_salary: int = 60000\n",
    "    savings_rate: float = 0.25\n",
    "    interest_rate: float = 0.05\n",
    "    promos_raise: float = 0.15\n",
    "    promos_every_n_year: int = 5\n",
    "    desired_cash: int = 1500000\n",
    "    inflation_rate_yearly: float = 0.02\n",
    "    yearly_spendings: float = 0.0\n",
    "    one_of_withdrawal: int = 1000\n",
    "\n",
    "model_data = ModelInputs()\n",
    "data = model_data\n",
    "data\n",
    "\n",
    "year = 0\n",
    "starting_wealth = 0\n",
    "\n",
    "def net_salary_at_year(data, year):\n",
    "\n",
    "# Add promotions effect to salary\n",
    "    num_promos = int(year/data.promos_every_n_year)\n",
    "    cost_of_living = data.starting_salary*(1+data.inflation_rate_yearly)**year\n",
    "    promotion_factor = (1+data.promos_raise)**num_promos\n",
    "    salary_t = cost_of_living*promotion_factor\n",
    "    \n",
    "# Subtract Annual spendings    \n",
    "    net_salary_t = salary_t * (1-data.yearly_spendings)\n",
    "    return net_salary_t\n",
    "\n",
    "net_salary_at_year(data, year)\n",
    "def cash_saved_during_year(data, year):\n",
    "    salary = net_salary_at_year(data, year)\n",
    "    cash_saved = salary * data.savings_rate\n",
    "    return cash_saved\n",
    "prior_wealth = 0\n",
    "def wealth_at_year(data, year, prior_wealth):\n",
    "    \n",
    "    cash_saved = cash_saved_during_year(data, year)\n",
    "    wealth = prior_wealth*(1+data.interest_rate) + cash_saved\n",
    "    return wealth\n",
    "wealth_at_year(data, year, prior_wealth)\n",
    "prior_wealth = 0\n",
    "wealth = 0\n",
    "year = 0\n",
    "\n",
    "#using while loop, to stop function when the resired cash collected\n",
    "while wealth < data.desired_cash:\n",
    "    year = year + 1\n",
    "    wealth = wealth_at_year(data, year, prior_wealth)\n",
    "    print(f' During year {year}, Total wealth is ${wealth:,.0f}.')\n",
    "    \n",
    "    prior_wealth = wealth\n",
    "def years_to_retirement(data):\n",
    "\n",
    "    prior_wealth = 0\n",
    "    wealth = 0\n",
    "    year = 0\n",
    "\n",
    "    #using while loop, to stop function when the resired cash collected\n",
    "    # Also counter one of withdrawal\n",
    "    while (wealth - data.one_of_withdrawal) < (data.desired_cash):\n",
    "        year = year + 1\n",
    "        wealth = wealth_at_year(data, year, prior_wealth)\n",
    "        prior_wealth = wealth\n",
    "        \n",
    "    print(f' It will take {year} years to retire.')\n",
    "    return year    \n",
    "\n",
    "years_to_retirement(data)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "be2861b1-239c-4182-b15b-5561bac9f700",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
